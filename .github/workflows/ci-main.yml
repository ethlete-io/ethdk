name: CI (Main)

on:
  push:
    branches:
      - main

concurrency: release_environment

jobs:
  main:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20]
    steps:
      - uses: actions/checkout@v4
        name: Checkout [main]
        with:
          fetch-depth: 0

      - name: Install pnpm
        uses: pnpm/action-setup@v4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'pnpm'

      - name: Derive appropriate SHAs for base and head for `nx affected` commands
        uses: nrwl/nx-set-shas@v4

      - run: pnpm install

      - run: pnpm nx format:check

      - run: pnpm nx run-many -t lint

      - run: pnpm nx run-many -t test

      - run: pnpm nx run-many -t build

      - run: pnpm nx run playground:build-storybook:ci

      - uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: '${{ secrets.GITHUB_TOKEN }}'
          firebaseServiceAccount: '${{ secrets.FIREBASE_SERVICE_ACCOUNT_ETHLETE_SDK }}'
          channelId: live
          projectId: ethlete-sdk
          target: prod

      - name: Create and publish versions
        id: changesets
        uses: TomTomB/changesets-action@v1
        with:
          version: pnpm changeset:release
          commit: 'chore: ðŸ¤– update versions'
          publish: pnpm release
          title: Release packages
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          HUSKY: 0

      - name: Post release notes to slack
        if: steps.changesets.outputs.published == 'true'
        id: slack
        uses: slackapi/slack-github-action@v1.26.0
        with:
          channel-id: ${{ secrets.SLACK_CHANNEL_ID }}
          payload: ${{ steps.changesets.outputs.publishedReleaseNotes }}
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
