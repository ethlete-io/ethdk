{
  "Element Ref": {
    "scope": "typescript",
    "prefix": "et-element-ref",
    "body": "elementRef = inject<ElementRef<HTMLElement>>(ElementRef);",
  },
  "Change Detector Ref": {
    "scope": "typescript",
    "prefix": "et-change-detector-ref",
    "body": "changeDetectorRef = inject(ChangeDetectorRef);",
  },
  "View Container Ref": {
    "scope": "typescript",
    "prefix": "et-view-container-ref",
    "body": "viewContainerRef = inject(ViewContainerRef);",
  },
  "Destroy": {
    "scope": "typescript",
    "prefix": "et-destroy",
    "body": "destroy$ = createDestroy();",
  },

  "Component": {
    "scope": "typescript",
    "prefix": "et-component",
    "body": [
      "import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';",
      "",
      "@Component({",
      "  selector: 'et-${1}',",
      "  templateUrl: './${1}.component.html',",
      "  styleUrl: './${1}.component.scss',",
      "  changeDetection: ChangeDetectionStrategy.OnPush,",
      "  encapsulation: ViewEncapsulation.None,",
      "  host: {",
      "    class: 'et-${1}-host',",
      "  },",
      "  imports: [],",
      "  hostDirectives: [],",
      "})",
      "export class ${0}Component {}",
    ],
    "description": "Add component boilerplate",
  },
  "Component Inline": {
    "scope": "typescript",
    "prefix": "et-component-inline",
    "body": [
      "import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';",
      "",
      "@Component({",
      "  selector: 'et-${1}',",
      "  template: ``,",
      "  changeDetection: ChangeDetectionStrategy.OnPush,",
      "  encapsulation: ViewEncapsulation.None,",
      "  host: {",
      "    class: 'et-${1}-host',",
      "  },",
      "  imports: [],",
      "  hostDirectives: [],",
      "})",
      "export class ${0}Component {}",
    ],
    "description": "Add component boilerplate",
  },

  "Directive": {
    "scope": "typescript",
    "prefix": "et-directive",
    "body": [
      "import { Directive } from '@angular/core';",
      "",
      "@Directive({",
      "  selector: '[et${0}]',",
      "})",
      "export class ${0}Directive {}",
    ],
    "description": "Add directive boilerplate",
  },
  "Directive with Token": {
    "scope": "typescript",
    "prefix": "et-directive-with-token",
    "body": [
      "import { Directive, InjectionToken } from '@angular/core';",
      "",
      "export const ${0}_TOKEN = new InjectionToken<${1}Directive>('${0}_TOKEN');",
      "",
      "@Directive({",
      "  selector: '[et${1}]',",
      "  providers: [",
      "    {",
      "      provide: ${0}_TOKEN,",
      "      useExisting: ${1}Directive,",
      "    },",
      "  ],",
      "})",
      "export class ${1}Directive {}",
    ],
    "description": "Add directive with token boilerplate",
  },
}
