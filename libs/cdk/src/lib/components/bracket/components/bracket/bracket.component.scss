.et-bracket {
  --connection-color: rgb(101, 101, 101);
  --connection-radius: 10px;
  --connection-size: 1.5px;

  display: grid;
  grid-auto-columns: min-content;
  column-gap: var(--_bracket-column-gap);
  row-gap: var(--_bracket-row-gap);

  .et-bracket-round {
    grid-column: var(--_cs) / var(--_ce);
    grid-row: var(--_rs) / var(--_rs);
    height: var(--_round-header-height);

    &[special-align-end='true'] {
      /// This is only for once special case:
      /// - It's a single elimination bracket
      /// - There are only 2 or 4 matches in the first round
      /// - It's the round header for the third place match
      /// In this case the header will get positioned into the third row (instead of a special "header only" row).
      /// If we don't align the header to the end, it will overlap with the final match.
      align-self: flex-end;
    }
  }

  &[has-round-headers='false'] {
    &[is-first-loser-round-match='true'] {
      margin-top: var(--_upper-lower-bracket-gap);
    }
  }

  &[has-round-headers='true'] [is-loser-round-header='true'] {
    margin-top: var(--_upper-lower-bracket-gap);
  }

  .et-bracket-match {
    --_gap-x-half: calc(var(--_bracket-column-gap) / 2);
    --_gap-y-half: calc(var(--_bracket-row-gap) / 2);
    --_bracket-item-height-half: calc(var(--_bracket-item-height) / 2);
    --_bracket-item-width-half: calc(var(--_bracket-item-width) / 2);
    --_connection-size-half: calc(var(--connection-size) / 2);

    position: relative;
    grid-column: var(--_cs) / var(--_ce);
    grid-row: var(--_rs) / var(--_re);

    inline-size: var(--_bracket-item-width);
    block-size: var(--_bracket-item-height);

    justify-self: center;
    align-self: center;

    &[line-span-before='0'][line-span-current='0'] {
      --_gap-full-width-before: var(--_bracket-column-gap);
    }

    &[line-span-before='2'][line-span-current='2'] {
      --_gap-full-width-before: calc(var(--_bracket-column-gap) * 2 + var(--_bracket-item-width));
    }

    &[line-span-before='0'][line-span-current='2'],
    &[line-span-before='2'][line-span-current='0'] {
      --_gap-full-width-before: calc(
        var(--_bracket-column-gap) + (var(--_bracket-item-width) / 2) + var(--_gap-x-half)
      );
    }

    &[line-span-after='0'][line-span-current='0'] {
      --_gap-full-width-after: var(--_bracket-column-gap);
    }

    &[line-span-after='2'][line-span-current='2'] {
      --_gap-full-width-after: calc(var(--_bracket-column-gap) * 2 + var(--_bracket-item-width));
    }

    &[line-span-after='0'][line-span-current='2'],
    &[line-span-after='2'][line-span-current='0'] {
      --_gap-full-width-after: calc(var(--_bracket-column-gap) + (var(--_bracket-item-width) / 2) + var(--_gap-x-half));
    }

    &[et-has-parents='true'] {
      &::before {
        content: '';
        position: absolute;
        inline-size: calc(var(--_gap-full-width-before) / 2);
        block-size: 0;
        border-block-start: var(--connection-size) solid var(--connection-color);
        inset-inline-end: 100%;
        inset-block-start: calc(50% - var(--_connection-size-half));
      }
    }

    &[et-has-child='true'] {
      &::after {
        --_height-multi: calc(var(--_bracket-item-height-half) * var(--_line-multi-after));
        --_gap-y-multi: calc(var(--_gap-y-half) * var(--_line-multi-after));

        content: '';
        position: absolute;
        inline-size: calc(var(--_gap-full-width-after) / 2);
        block-size: calc(var(--_height-multi) + var(--_gap-y-multi));
        inset-inline-start: 100%;
      }

      &[is-last-lower-bracket-match='true']::after {
        --_height-multi: calc(
          (var(--_bracket-item-height-half) * var(--_line-multi-after)) + var(--_upper-lower-bracket-gap) +
            var(--_round-header-height)
        );
      }

      &[et-child-connector-shape='down']::after {
        border-block-start: var(--connection-size) solid var(--connection-color);
        border-inline-end: var(--connection-size) solid var(--connection-color);
        border-start-end-radius: var(--connection-radius);
        inset-block-start: calc(50% - var(--_connection-size-half));
      }

      &[et-child-connector-shape='up']::after {
        border-block-end: var(--connection-size) solid var(--connection-color);
        border-inline-end: var(--connection-size) solid var(--connection-color);
        border-end-end-radius: var(--connection-radius);
        inset-block-end: calc(50% - var(--_connection-size-half));
      }

      &[et-child-connector-shape='straight']::after {
        border-block-start: var(--connection-size) solid var(--connection-color);
        inset-block-start: calc(50% - var(--_connection-size-half));
        block-size: 0;
      }
    }
  }
}
